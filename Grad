import numpy as np

A_coef = np.array([[2.0, 1.0, -3.0], [5.0, -4.0, 1.0], [1.0, -1.0, -4.0]])
b_coef = np.array([7.0, -19.0, 4.0])

x_start = np.array([1.0, 1.0, 1.0])

def gradient(x, A, b):
	element_1 = np.dot(np.transpose(A),np.dot(A, x))
	element_2 = np.dot(np.transpose(A), b)
	return element_1 - element_2


def linear_solv(A, b, x_sol, k=0.001, criteria=0.0001, max_iter=10000):
    for i in range(max_iter):
        x_sol = x_sol - k * gradient(x_sol, A, b)
        print (x_sol)
        btent=np.dot(A,x_sol)
        error = np.sum(np.abs(btent-b))
        if error < criteria:
            return x_sol
    
print("La solucion viene como :", linear_solv(A_coef, b_coef, x_start))
